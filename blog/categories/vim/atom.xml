<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : vim | Xavier Nayrac]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2017-02-26T11:13:08+01:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bug de la version graphique de Vim sur Debian Sid]]></title>
    <link href="http://lkdjiin.github.io/blog/2016/11/11/bug-de-la-version-graphique-de-vim-sur-debian-sid/"/>
    <updated>2016-11-11T09:46:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2016/11/11/bug-de-la-version-graphique-de-vim-sur-debian-sid</id>
    <content type="html"><![CDATA[<p>Depuis une mise à jour récente de la bibliothèque gtk3 un
bug affecte la version graphique de Vim (<code>gvim</code>) sur Debian Sid. Ce bug est
important puisqu’il rend <code>gvim</code> tout simplement inutilisable. Lorsqu’on lance
le programme on obtient le message suivant, qui se répète plusieurs fois :</p>

<pre><code>$ gvim

(gvim:6054): Gtk-CRITICAL **: gtk_widget_set_size_request: assertion 'width &gt;= -1' failed
*** BUG ***
In pixman_region32_init_rect: Invalid rectangle passed
Set a breakpoint on '_pixman_log_error' to debug
.
.
.
</code></pre>

<p>Des discussions sont en cours pour savoir si le bug est de la responsabilité
de Vim ou de Gtk3, mais en attendant on fait quoi ?</p>

<!-- more -->

<p>On peut d’abord regarder où est placée la commande <code>gvim</code> :</p>

<p><code>bash
$ which gvim
/usr/bin/gvim
</code></p>

<p>On peut maintenant regarder quel programme est en réalité appelé par cette
commande (j’ai tronqué la sortie pour laisser seulement ce qui est
intéressant).  On voit que <code>gvim</code> est un lien symbolique qui pointe sur
<code>/etc/alternatives/gvim</code> :</p>

<p><code>bash
$ ls -l /usr/bin/gvim
[...] /usr/bin/gvim -&gt; /etc/alternatives/gvim*
</code></p>

<p>Allons voir sur quel programme est <em>branché</em> l’alternative :</p>

<p><code>bash
$ ls -l /etc/alternatives/gvim
[...] /etc/alternatives/gvim -&gt; /usr/bin/vim.gtk3*
</code></p>

<p>Ça fait sens. Regardons quelles <em>versions</em> de vim sont disponibles en tapant
<code>vim</code> + tab :</p>

<p><code>bash
$ vim
vim        vim.basic  vimdiff    vim.gtk    vim.gtk3   vim.tiny   vimtutor 
</code></p>

<p>L’ancienne version (<code>vim.gtk</code>) m’intéresse. Si vous ne l’avez pas/plus, vous
pouvez l’installer avec <code>apt-get install vim-gtk</code>.</p>

<h2 id="solution-n1">Solution n°1</h2>

<p>Un tour dans l’aide de <code>vim.gtk</code> montrera qu’on peut le lancer avec l’option <code>-g</code>
pour avoir l’interface graphique. En attendant que le bug soit réparé on peut
donc utiliser <code>vim.gtk -g</code> à la place de <code>gvim</code>.</p>

<h2 id="solution-n2">Solution n°2</h2>

<p>Le programme <code>update-alternatives</code> permet de gérer ce genre de problème
facilement. Utilisez le pour choisir ce que lancera la commande <code>gvim</code> :</p>

<pre><code>$ sudo update-alternatives --config gvim
[sudo] Mot de passe de xavier : 
Il existe 2 choix pour l'alternative gvim (qui fournit /usr/bin/gvim).

  Sélection   Chemin             Priorité  État
------------------------------------------------------------
* 0            /usr/bin/vim.gtk3   50        mode automatique
  1            /usr/bin/vim.gtk    50        mode manuel
  2            /usr/bin/vim.gtk3   50        mode manuel

Appuyez sur &lt;Entrée&gt; pour conserver la valeur par défaut[*] ou choisissez le numéro sélectionné :1
</code></pre>

<p>Vous pourriez préférer la version graphique <code>galternatives</code>.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim : Pourquoi les touches HJKL ?]]></title>
    <link href="http://lkdjiin.github.io/blog/2015/04/02/vim-pourquoi-les-touches-hjkl/"/>
    <updated>2015-04-02T11:46:00+02:00</updated>
    <id>http://lkdjiin.github.io/blog/2015/04/02/vim-pourquoi-les-touches-hjkl</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Pourquoi utilise-t-on les touches HJKL pour les déplacements de base dans Vim ?
Par déplacement de base, j’entends un caractère à gauche ou à droite (H et L) et
une ligne au-dessus ou en dessous (J et K). Pourquoi ne pas utiliser les
touches fléchées, par exemple, ou même la main gauche ?</p>

<p><img class="center" src="/images/ADM-3A.jpg"></p>

<!-- more -->

<p><strong>Pourquoi pas les touches fléchées ?</strong></p>

<p>En fait, on peut bien sûr se servir des touches fléchées pour se déplacer dans
Vim.  C’est utile si vous êtes débutant, mais vous devriez essayer rapidement
de perdre l’habitude de les utiliser : Elles sont trop loin du <em>home row</em> (voir
plus bas).</p>

<p>On peut carrément les désactiver ou mieux, s’en servir pour autre chose, comme
pour changer de fenêtre, modifier la taille des fenêtres, etc…</p>

<p><strong>Pourquoi pas les touches à main gauche ?</strong></p>

<p>Le créateur de Vim était droitier, donc on se sert de la main droite !
Évidemment non, puisque les joueurs utilisent sans problèmes WASD pour se
diriger (ZQSD en azerty).</p>

<p><strong>Le home row</strong></p>

<p>Quelle est la bonne façon de placer ses doigts sur un clavier ?  Selon les
règles de la dactylographie, les doigts des deux mains doivent se placer sur le
<em>home row</em>. Ça minimise énormément le déplacement des doigts et des mains et la
fatigue musculaire tout en augmentant la vitesse de frappe.</p>

<p><img class="center" src="/images/keyboard-home-row.png"></p>

<p><strong>Mais alors pourquoi utiliser HJKL pour se déplacer et pas JKL; ?</strong></p>

<p>À cause de la force des doigts peut-être ? Le petit n’étant pas très fort ?
Non. C’est tout simplement parce que Vi, l’ancêtre de Vim, a été créé sur
<a href="http://en.wikipedia.org/wiki/ADM-3A">le terminal ADM-3A</a>.
Regardez bien ce qu’on trouve sur les touches HJKL :</p>

<p><img class="center" src="/images/keyboard-ADM-3A.png"></p>

<p>Au passage, notez l’emplacement de la touche ESC ;-)</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Un nouveau dépot pour les plugins Vim]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/06/28/un-nouveau-depot-pour-les-plugins-vim/"/>
    <updated>2014-06-28T21:13:00+02:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/06/28/un-nouveau-depot-pour-les-plugins-vim</id>
    <content type="html"><![CDATA[<p>Un nouveau dépot pour plugins Vim est disponible ici : <a href="http://vimawesome.com/">vimawesome</a>.</p>

<!-- more -->

<p>L’interface tranche radicalement avec celle de vim.org, et ça fait du bien.</p>

<p>Le code du site est disponible sur Github : <a href="https://github.com/divad12/vim-awesome">wim-awesome</a> 
et nous sommes tous invités à contribuer ;)</p>

<script id="fb33k8u">(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>

<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trois bibliothèques de fonctions pour écrire vos plugins Vim]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/06/08/trois-bibliotheques-de-fonctions-pour-ecrire-vos-plugins-vim/"/>
    <updated>2014-06-08T21:27:00+02:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/06/08/trois-bibliotheques-de-fonctions-pour-ecrire-vos-plugins-vim</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>Aujourd’hui je vous propose trois bibliothèques de fonctions Vimscript, pour
faciliter l’écriture de plugins pour Vim.</p>

<!-- more -->

<p>J’en ai pour l’instant testé… aucune ! Mais j’ai bien l’intention de les
essayer ;)</p>

<p>Tout d’abord <a href="https://github.com/google/maktaba">maktaba</a>, par Google. Parmi
les fonctionnalités qui m’intéresse, je note une interface pour <em>logger</em> et
la gestion des exceptions.</p>

<p>Ensuite <a href="https://github.com/vim-jp/vital.vim">vital.vim</a>. Le readme annonce
que le projet a pour objectif de réunir les fonctions de Bundler et de
jQuery, mais pour Vim.</p>

<p>Et enfin <a href="https://github.com/mattn/webapi-vim">webapi-vim</a>, qui gère notamment
la connexion OAuth, le parsing JSON et quelques algorithmes de hashage.</p>

<script id="fb33k8u">(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>

<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Créer facilement des thèmes pour Vim]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/06/07/creer-facilement-des-themes-pour-vim/"/>
    <updated>2014-06-07T21:12:00+02:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/06/07/creer-facilement-des-themes-pour-vim</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Aujourd’hui, pas d’article technique mais une adresse internet :
<a href="http://www.vimtax.com/">www.vimtax.com</a>.</p>

<!-- more -->

<p>Ce site vous permettra de réaliser simplement et rapidement des thèmes
de coloration syntaxique pour Vim.</p>

<p>Choisissez un thème de base, puis
cliquez sur un élément (numéro de ligne, commentaire, mot-clé, couleur de
fond, etc) que vous souhaitez personnaliser. Les changements sont visibles
en temps réel.</p>

<p>Voilà, bonne création ;)</p>

<script id="fb33k8u">(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>

<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
</feed>
