<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : mathématique | lkdjiin's blog]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/mathematique/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2014-04-01T21:31:10+02:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gem Ruby: Tracez vos fonctions et données en 2D avec ctioga2]]></title>
    <link href="http://lkdjiin.github.io/blog/2013/10/05/gem-ruby-tracez-vos-fonctions-et-donnees-en-2d-avec-ctioga2/"/>
    <updated>2013-10-05T14:43:00+02:00</updated>
    <id>http://lkdjiin.github.io/blog/2013/10/05/gem-ruby-tracez-vos-fonctions-et-donnees-en-2d-avec-ctioga2</id>
    <content type="html"><![CDATA[<p>Je cherchais un programme simple à prendre en main pour tracer des
ensembles de données depuis un fichier et des fonctions mathématiques
et je suis tombé sur la gem <a href="http://ctioga2.rubyforge.org/index.html">ctioga2</a>.</p>

<p><img src="/images/ctioga2.png"></p>

<p>Voici une introduction rapide à ce programme de traçage.</p>

<!-- more -->


<h2>Installation</h2>

<p>Il faut d'abord installer les outils nécessaires à la génération de document
pdf. Sur Linux c'est texlive, pour les autres OS voyez la
<a href="http://ctioga2.rubyforge.org/install.html">page d'installation</a> de ctioga2.
Ensuite on installe la gem comme d'habitude:</p>

<pre><code>gem install ctioga2
</code></pre>

<h2>Le fichier de données</h2>

<p>Un commentaire commence par un <code>#</code>. La première colonne est la coordonnée <code>x</code> et
la seconde colonne est la coordonnée <code>y</code>. Difficile de faire plus simple.
Un exemple:</p>

<pre><code># Fichier data.dat
# x y
0 -0.9
1 -0.4
2 -0.1
3 0.1
4 0.4
5 0.9
</code></pre>

<h2>Les scripts</h2>

<p>Voici un script minimal pour générer un fichier pdf:</p>

<pre><code># Fichier test.ct2
xpdf
plot data.dat
title 'Test'
</code></pre>

<p>Ce script va générer un fichier au format pdf à partir de notre fichier
de données, avec le titre <code>Test</code>. On le lance ainsi:</p>

<pre><code>ctioga2 -f test.ct2
</code></pre>

<p><strong>Note</strong> j'ai trouvé que seuls les caractères ascii fonctionnaient pour le
titre.</p>

<p>Si notre fichier de données possèdent plusieurs colonnes, on peut tracer
plusieurs courbes ainsi:</p>

<pre><code># Fichier test.ct2
xpdf
plot data.dat
plot data.dat@1:3
title 'Test'
</code></pre>

<p>Par défaut les <code>x</code> proviennent de la 1ère colonne et les <code>y</code> de la seconde.
La ligne <code>plot data.dat@1:3</code> trace une seconde courbe avec les <code>y</code> venant
de la 3ème colonne.</p>

<p>On peut aussi fournir des expressions Ruby:</p>

<pre><code>plot data2.dat@'$2:$3**2'
</code></pre>

<p>Ici la seconde colonne est utilisée pour les <code>x</code> et les <code>y</code> proviennent de
la troisième colonne, dont les données sont élevées à la puissance 2.</p>

<p>Plein d'autres choses sont possibles, comme produire du format png ou
svg, spécifier la portée des coordonnées x et y, utiliser le programme
en ligne de commande, etc.</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
</feed>
