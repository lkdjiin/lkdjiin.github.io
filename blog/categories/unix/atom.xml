<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : unix | lkdjiin's blog]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/unix/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2014-01-10T21:50:42+01:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[L'auto complétion programmable en bash: partie 1]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/01/10/lauto-completion-programmable-en-bash-partie-1/"/>
    <updated>2014-01-10T21:41:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/01/10/lauto-completion-programmable-en-bash-partie-1</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<h2>Ou comment git, apt-get et les autres l'utilisent</h2>

<p>L'auto-complétion de la ligne de commande sur unix, c'est à priori
très simple. Si je tape dans un terminal <code>ec</code> suivi de la touche tabulation:</p>

<pre><code>[~]⇒ ec[TAB]
</code></pre>

<p>C'est à dire les deux lettres &ldquo;ec&rdquo; suivies de la touche tabulation, la
commande est étendue en :</p>

<pre><code>echo 
</code></pre>

<p>Si il y a plusieurs choix possibles, Bash me les fournis:</p>

<pre><code>[~]⇒ apti
aptitude                      aptitude-curses
aptitude-create-state-bundle  aptitude-run-state-bundle
</code></pre>

<!-- more -->


<p>Ça devient plus intéressant quand ça fonctionne aussi avec les <em>arguments</em> des
commandes, qu'à priori, le shell ne connait pas. Par exemple :</p>

<pre><code>[~]⇒ apt-get upg[TAB]
</code></pre>

<p>devient :</p>

<pre><code>apt-get upgrade
</code></pre>

<p>Ou encore :</p>

<pre><code>[~]⇒ git fi[TAB]
</code></pre>

<p>qui devient :</p>

<pre><code>git filter-branch
</code></pre>

<p>Et ça devient carrément magique &ndash; <em>en tout cas pour moi</em> &ndash; quand la commande
git réussit l'auto-complétion d'une commande que j'ai ajouté moi-même.  Je
m'explique. J'ai par exemple, dans mon PATH, le fichier bash <code>git-pom</code> suivant:</p>

<p>``` bash git-pom</p>

<h1>!/bin/bash</h1>

<p>git push origin master
```</p>

<p>Si je tape :</p>

<pre><code>[~]⇒ git p[TAB]
</code></pre>

<p>ça devient :</p>

<pre><code>pom           pull          push          push-branch   
[~]⇒  git p
</code></pre>

<p>Git, ou bash, ou je ne sais quoi a trouvé la commande <code>pom</code> ! Moi ça m'épate
à chaque fois. Notez au passage que le fichier qui contient la nouvelle commande
s'appelle <code>git-pom</code> et qu'on peut taper <code>git pom</code>. Alors, comment ça
marche ?</p>

<p>Et bien je dois avouer que je n'en sais rien ! J'ai bien une petite idée
des mécanismes en jeu, mais aucunes connaissances sur le sujet. On va
donc découvrir cela ensemble au fil des articles suivants.</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
</feed>
