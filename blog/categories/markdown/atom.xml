<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : markdown | lkdjiin's blog]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/markdown/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2014-03-22T20:56:47+01:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim - un plugin pour markdown - partie 4]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/03/22/vim-un-plugin-pour-markdown-partie-4/"/>
    <updated>2014-03-22T20:42:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/03/22/vim-un-plugin-pour-markdown-partie-4</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>Maintenant on fait tous les titres, jusqu'au niveau 6 donc.</p>

<!-- more -->


<p>``` vim autoload/quickmarkdown.vim
function s:build_big_title(char)
  let s:line_content = substitute(getline(&ldquo;.&rdquo;), &lsquo;.&rsquo;, a:char, &lsquo;g&rsquo;)
  call append(&lsquo;.&rsquo;, s:line_content)
endfunction</p>

<p>function s:build_little_title(str)
  call setline(line(&lsquo;.&rsquo;), a:str . getline(&lsquo;.&rsquo;))
endfunction</p>

<p>function! quickmarkdown#title1()
  call s:build_big_title(&ldquo;=&rdquo;)
endfunction</p>

<p>function! quickmarkdown#title2()
  call s:build_big_title(&ldquo;&ndash;&rdquo;)
endfunction</p>

<p>function! quickmarkdown#title3()
  call s:build_little_title(&ldquo;### &rdquo;)
endfunction</p>

<p>function! quickmarkdown#title4()
  call s:build_little_title(&ldquo;#### &rdquo;)
endfunction</p>

<p>function! quickmarkdown#title5()
  call s:build_little_title(&ldquo;##### &rdquo;)
endfunction</p>

<p>function! quickmarkdown#title6()
  call s:build_little_title(&ldquo;###### &rdquo;)
endfunction
```</p>

<p><code>vim plugin/quickmarkdown.vim
command! QuickMarkdownTitle1 call quickmarkdown#title1()
command! QuickMarkdownTitle2 call quickmarkdown#title2()
command! QuickMarkdownTitle3 call quickmarkdown#title3()
command! QuickMarkdownTitle4 call quickmarkdown#title4()
command! QuickMarkdownTitle5 call quickmarkdown#title5()
command! QuickMarkdownTitle6 call quickmarkdown#title6()
</code></p>

<p>J'ai aussi changé mon mapping pour qu'il soit plus homogène.</p>

<p><strong>En qwerty:</strong></p>

<p><code>vim .vimrc
nmap &lt;Leader&gt;m1 :QuickMarkdownTitle1&lt;Enter&gt;
nmap &lt;Leader&gt;m2 :QuickMarkdownTitle2&lt;Enter&gt;
nmap &lt;Leader&gt;m3 :QuickMarkdownTitle3&lt;Enter&gt;
nmap &lt;Leader&gt;m4 :QuickMarkdownTitle4&lt;Enter&gt;
nmap &lt;Leader&gt;m5 :QuickMarkdownTitle5&lt;Enter&gt;
nmap &lt;Leader&gt;m6 :QuickMarkdownTitle6&lt;Enter&gt;
</code></p>

<p><strong>En azerty:</strong></p>

<p><code>vim .vimrc
nmap &lt;Leader&gt;m&amp; :QuickMarkdownTitle1&lt;Enter&gt;
nmap &lt;Leader&gt;mé :QuickMarkdownTitle2&lt;Enter&gt;
nmap &lt;Leader&gt;m" :QuickMarkdownTitle3&lt;Enter&gt;
nmap &lt;Leader&gt;m' :QuickMarkdownTitle4&lt;Enter&gt;
nmap &lt;Leader&gt;m( :QuickMarkdownTitle5&lt;Enter&gt;
nmap &lt;Leader&gt;m- :QuickMarkdownTitle6&lt;Enter&gt;
</code></p>

<p><strong>En bépo:</strong></p>

<p><code>vim .vimrc
nmap &lt;Leader&gt;m" :QuickMarkdownTitle1&lt;Enter&gt;
nmap &lt;Leader&gt;m« :QuickMarkdownTitle2&lt;Enter&gt;
nmap &lt;Leader&gt;m» :QuickMarkdownTitle3&lt;Enter&gt;
nmap &lt;Leader&gt;m( :QuickMarkdownTitle4&lt;Enter&gt;
nmap &lt;Leader&gt;m) :QuickMarkdownTitle5&lt;Enter&gt;
nmap &lt;Leader&gt;m@ :QuickMarkdownTitle6&lt;Enter&gt;
</code></p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim - un plugin pour markdown - partie 3]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/03/17/vim-un-plugin-pour-markdown-partie-3/"/>
    <updated>2014-03-17T21:05:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/03/17/vim-un-plugin-pour-markdown-partie-3</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>J'ai ajouté les titres de niveau 2 et 3, nettoyer un peu le code et
et remplacer l'utilisation des commandes en mode normal <code>yy</code> et <code>p</code>
(qu'un utilisateur peut toujours avoir remappé) par des fonctions
d'évaluations:</p>

<!-- more -->


<p>``` vim
function s:build_title(char)
  let s:line_content = substitute(getline(&ldquo;.&rdquo;), &lsquo;.&rsquo;, a:char, &lsquo;g&rsquo;)
  call append(&lsquo;.&rsquo;, s:line_content)
endfunction</p>

<p>function! quickmarkdown#title1()
  call s:build_title(&ldquo;=&rdquo;)
endfunction</p>

<p>function! quickmarkdown#title2()
  call s:build_title(&ldquo;&ndash;&rdquo;)
endfunction</p>

<p>function! quickmarkdown#title3()
  call setline(line(&lsquo;.&rsquo;), &lsquo;### &rsquo; . getline(&lsquo;.&rsquo;))
endfunction
```</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim - plugin pour markdown - la suite]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/03/15/vim-plugin-pour-markdown-la-suite/"/>
    <updated>2014-03-15T20:24:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/03/15/vim-plugin-pour-markdown-la-suite</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>L'embryon de plugin Vim pour les titres en markdown écrit
<a href="/blog/2014/03/12/vim-un-plugin-minimal-pour-les-titres-markdown/">la dernière fois</a>
ne me satisfait pas du tout. En effet, il ne fonctionne pas avec ma
configuration personnelle, adapté pour le clavier bépo.</p>

<!-- more -->


<p>La fonction pour faire un titre était la suivante:</p>

<p><code>vim autoload/quickmarkdown.vim
function! quickmarkdown#title1()
  execute "normal yypVr="
endfunction
</code></p>

<p>Chez moi, la touche pour la fonction de remplacement n'est pas <code>r</code>, mais <code>h</code>.
Voici donc une nouvelle fonction qui devrait marcher pour tout type de
configuration (enfin j'espère):</p>

<p><code>vim autoload/quickmarkdown.vim
function! quickmarkdown#title1()
  execute "normal yyp"
  execute ":s/./=/g"
endfunction
</code></p>

<p>Plutôt que de remplacer la ligne avec <code>Vr=</code>, on la remplace avec une
substitution. Pour être <em>vraiment</em> utilisable partout, il me reste à
trouver comment me passer du <code>yyp</code> pour dupliquer une ligne, histoire
que ça fonctionne même si vous avez remappé <code>y</code> ou <code>p</code>…</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim - Un plugin minimal pour les titres markdown]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/03/12/vim-un-plugin-minimal-pour-les-titres-markdown/"/>
    <updated>2014-03-12T21:32:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/03/12/vim-un-plugin-minimal-pour-les-titres-markdown</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Hier on a vu <a href="/blog/2014/03/11/vim-cas-pratique-pour-les-debutants-les-titres-en-markdown/">comment faire rapidement des titres au format markdown</a>.
Aujourd'hui on transforme ça en plugin. Enfin, en un embryon de plugin.</p>

<!-- more -->


<p>Voici donc un plugin bricolé en deux minutes qui fait des titres de niveau 1
en markdown.</p>

<p>``` vim plugin/quickmarkdown.vim
if exists(&lsquo;g:loaded_quickmarkdown&rsquo;) || &amp;cp || v:version &lt; 700
  finish
endif
let g:loaded_quickmarkdown = 1</p>

<p>command! QuickMarkdownTitle1 call quickmarkdown#title1()
```</p>

<p><code>vim autoload/quickmarkdown.vim
function! quickmarkdown#title1()
  execute "normal yypVr="
endfunction
</code></p>

<p>Et en mettant ce qui suit dans votre vimrc, on peut l'activer avec
leader puis <code>=</code>:</p>

<p><code>vim
map&lt;Leader&gt;= :QuickMarkdownTitle1&lt;Enter&gt;
</code></p>

<p>Quand j'aurais le temps j'ajouterais les niveaux 2, 3, 4, etc. Et aussi
la documentation et quelques explications ;)</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim - Cas pratique pour les débutants : les titres en markdown]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/03/11/vim-cas-pratique-pour-les-debutants-les-titres-en-markdown/"/>
    <updated>2014-03-11T21:09:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/03/11/vim-cas-pratique-pour-les-debutants-les-titres-en-markdown</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Vous débutez sur Vim ? Je vous propose aujourd'hui des exercices pratiques
pour définir des titres au format markdown.</p>

<!-- more -->


<p>Un titre de niveau 1 en markdown s'écrit comme ceci:</p>

<pre><code>Titre de niveau 1
=================
</code></pre>

<p>On est pas obligé de mettre autant de <code>=</code> que de caractères dans le titre
(de mémoire je crois que 3 suffisent), mais c'est quand même agréable à
l'œil.</p>

<p>La suite de commandes pour obtenir ça est: <code>yypVr=</code>. On décortique:</p>

<ul>
<li><code>yy</code> copie la ligne du titre dans un buffer.</li>
<li><code>p</code> affiche ce buffer sur la ligne du dessous et nous place sur cette
nouvelle ligne.</li>
<li><code>V</code> passe cette nouvelle ligne en mode selection.</li>
<li><code>r=</code> remplace toute la selection par autant de <code>=</code>.</li>
</ul>


<p>Pour les titres de niveau 2, on remplace le <code>=</code> par un <code>-</code>.</p>

<p>Voilà, la prochaine fois on en fera peut-être un plugin, allez savoir…</p>

<p>Et vous, vous faites comment ?</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
</feed>
