<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : markdown | lkdjiin's blog]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/markdown/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2014-03-16T21:21:19+01:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim - plugin pour markdown - la suite]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/03/15/vim-plugin-pour-markdown-la-suite/"/>
    <updated>2014-03-15T20:24:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/03/15/vim-plugin-pour-markdown-la-suite</id>
    <content type="html"><![CDATA[<p>L'embryon de plugin Vim pour les titres en markdown écrit
<a href="/blog/2014/03/12/vim-un-plugin-minimal-pour-les-titres-markdown/">la dernière fois</a>
ne me satisfait pas du tout. En effet, il ne fonctionne pas avec ma
configuration personnelle, adapté pour le clavier bépo.</p>

<!-- more -->


<p>La fonction pour faire un titre était la suivante:</p>

<p><code>vim autoload/quickmarkdown.vim
function! quickmarkdown#title1()
  execute "normal yypVr="
endfunction
</code></p>

<p>Chez moi, la touche pour la fonction de remplacement n'est pas <code>r</code>, mais <code>h</code>.
Voici donc une nouvelle fonction qui devrait marcher pour tout type de
configuration (enfin j'espère):</p>

<p><code>vim autoload/quickmarkdown.vim
function! quickmarkdown#title1()
  execute "normal yyp"
  execute ":s/./=/g"
endfunction
</code></p>

<p>Plutôt que de remplacer la ligne avec <code>Vr=</code>, on la remplace avec une
substitution. Pour être <em>vraiment</em> utilisable partout, il me reste à
trouver comment me passer du <code>yyp</code> pour dupliquer une ligne, histoire
que ça fonctionne même si vous avez remappé <code>y</code> ou <code>p</code>…</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim - Un plugin minimal pour les titres markdown]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/03/12/vim-un-plugin-minimal-pour-les-titres-markdown/"/>
    <updated>2014-03-12T21:32:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/03/12/vim-un-plugin-minimal-pour-les-titres-markdown</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Hier on a vu <a href="/blog/2014/03/11/vim-cas-pratique-pour-les-debutants-les-titres-en-markdown/">comment faire rapidement des titres au format markdown</a>.
Aujourd'hui on transforme ça en plugin. Enfin, en un embryon de plugin.</p>

<!-- more -->


<p>Voici donc un plugin bricolé en deux minutes qui fait des titres de niveau 1
en markdown.</p>

<p>``` vim plugin/quickmarkdown.vim
if exists(&lsquo;g:loaded_quickmarkdown&rsquo;) || &amp;cp || v:version &lt; 700
  finish
endif
let g:loaded_quickmarkdown = 1</p>

<p>command! QuickMarkdownTitle1 call quickmarkdown#title1()
```</p>

<p><code>vim autoload/quickmarkdown.vim
function! quickmarkdown#title1()
  execute "normal yypVr="
endfunction
</code></p>

<p>Et en mettant ce qui suit dans votre vimrc, on peut l'activer avec
leader puis <code>=</code>:</p>

<p><code>vim
map&lt;Leader&gt;= :QuickMarkdownTitle1&lt;Enter&gt;
</code></p>

<p>Quand j'aurais le temps j'ajouterais les niveaux 2, 3, 4, etc. Et aussi
la documentation et quelques explications ;)</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim - Cas pratique pour les débutants : les titres en markdown]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/03/11/vim-cas-pratique-pour-les-debutants-les-titres-en-markdown/"/>
    <updated>2014-03-11T21:09:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/03/11/vim-cas-pratique-pour-les-debutants-les-titres-en-markdown</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Vous débutez sur Vim ? Je vous propose aujourd'hui des exercices pratiques
pour définir des titres au format markdown.</p>

<!-- more -->


<p>Un titre de niveau 1 en markdown s'écrit comme ceci:</p>

<pre><code>Titre de niveau 1
=================
</code></pre>

<p>On est pas obligé de mettre autant de <code>=</code> que de caractères dans le titre
(de mémoire je crois que 3 suffisent), mais c'est quand même agréable à
l'œil.</p>

<p>La suite de commandes pour obtenir ça est: <code>yypVr=</code>. On décortique:</p>

<ul>
<li><code>yy</code> copie la ligne du titre dans un buffer.</li>
<li><code>p</code> affiche ce buffer sur la ligne du dessous et nous place sur cette
nouvelle ligne.</li>
<li><code>V</code> passe cette nouvelle ligne en mode selection.</li>
<li><code>r=</code> remplace toute la selection par autant de <code>=</code>.</li>
</ul>


<p>Pour les titres de niveau 2, on remplace le <code>=</code> par un <code>-</code>.</p>

<p>Voilà, la prochaine fois on en fera peut-être un plugin, allez savoir…</p>

<p>Et vous, vous faites comment ?</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim: Créez des présentations avec Vimdeck]]></title>
    <link href="http://lkdjiin.github.io/blog/2013/10/13/vim-creez-des-presentations-avec-vimdeck/"/>
    <updated>2013-10-13T13:17:00+02:00</updated>
    <id>http://lkdjiin.github.io/blog/2013/10/13/vim-creez-des-presentations-avec-vimdeck</id>
    <content type="html"><![CDATA[<p>Vimdeck est un programme écrit en Ruby qui transforme un fichier texte au
format Markdown en plusieurs <em>slides</em> pour effectuer une présentation avec
l'éditeur de texte Vim !</p>

<!-- more -->


<h2>Installation</h2>

<p>Installez tout d'abord le plugin Vim <a href="https://github.com/vim-scripts/SyntaxRange">SyntaxRange</a>.</p>

<p>Ensuite, installez le programme de manière classique:</p>

<pre><code>gem install vimdeck
</code></pre>

<p>Note: J'ai eu un problème de dépendance (sur Debian) et il a fallu installer la
librairie systême <code>libmagickwand-dev</code> pour que tout fonctionne bien.</p>

<h2>Utilisation</h2>

<p>Maintenant on écrit notre présentation au format Markdown, par exemple:</p>

<pre><code># Premier slide

- Premier point
- Second point
- Troisième point


# Deuxième slide

- Premier
{~- Deuxième point~}
{~- Troisième point~}


# Troisième et dernier slide

```ruby
class Foo
  def bar
    puts "Hello Vimdeck!"
  end
end
```
</code></pre>

<p>Et on lance la présentation ainsi:</p>

<pre><code>vimdeck mon_fichier.md
</code></pre>

<p>Ensuite, on change de slide avec les touches PageUp/PageDown.</p>

<p>Vous pouvez voir des captures d'écrans sur le <a href="https://github.com/tybenz/vimdeck">site du projet</a>.</p>

<h2>Conclusion</h2>

<p>Bon, le projet est un peu jeune et pas mal buggé, mais l'idée est vraiment
intéressante. C'est totalement improbable, complêtement loufoque, inutilisable
avec des graphiques, donc
rigoureusement indispensable, ne serait-ce que pour frimer devant les
collègues: «Regardez comment je fais une présentation en 3 minutes avec mon
éditeur de texte…».</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
</feed>
