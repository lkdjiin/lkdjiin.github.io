<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : gem | lkdjiin's blog]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/gem/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2014-07-01T21:35:30+02:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sortie de Coco version 0.11.0]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/05/24/sortie-de-coco-version-0-dot-11-dot-0/"/>
    <updated>2014-05-24T20:59:00+02:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/05/24/sortie-de-coco-version-0-dot-11-dot-0</id>
    <content type="html"><![CDATA[<p>Je viens juste de mettre en ligne la version 0.11.0 de Coco, une gem de
<em>code coverage</em> pour Ruby.</p>

<!-- more -->


<p>Ce que fait cette nouvelle version:</p>

<ul>
<li>Échappe proprement les entités HTML dans les rapports.</li>
<li>Implémente des compteurs de <em>hit</em>.</li>
<li>Sortie d'avertissement sur la console lors de l'utilisation de
fonctionnalités dépréciées.</li>
</ul>


<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Utiliser une version particulière d'une gem Ruby... dans une gem]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/05/21/utiliser-une-version-particuliere-dune-gem-ruby-dot-dot-dot-dans-une-gem/"/>
    <updated>2014-05-21T20:48:00+02:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/05/21/utiliser-une-version-particuliere-dune-gem-ruby-dot-dot-dot-dans-une-gem</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>On connait tous le moyen d'utiliser une gem d'une version précise dans un
projet Rails. Il suffit de mettre ceci dans le Gemfile:</p>

<p><code>ruby Gemfile
gem 'foo', '=1.2.3'
</code></p>

<p>Et hop, Rails, avec son coté <em>magique</em>, fait automatiquement le <code>require</code>
nécéssaire pour charger la gem <code>foo</code>, avec la version <code>1.2.3</code>.
Mais qu'en est-il lorsqu'on veut faire la même chose dans une gem, ou bien
dans un simple script ?</p>

<!-- more -->


<p>Si j'écris un article sur ce sujet c'est parce que j'oublie régulièrement
comment faire. Et qu'à chaque fois je dois perdre quelques minutes à chercher.
En l'écrivant une fois pour toutes, j'éspère que ça va rentrer ;)</p>

<p>La solution est évidemment très simple, on écrit ce qui suit dans son script:</p>

<p><code>ruby
gem 'foo', '=1.2.3'
require 'foo'
</code></p>

<p>Et voilà.</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mettre à jour des gems ayants des références circulaires avec Bundle]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/04/28/mettre-a-jour-des-gems-ayants-des-references-circulaires-avec-bundle/"/>
    <updated>2014-04-28T21:25:00+02:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/04/28/mettre-a-jour-des-gems-ayants-des-references-circulaires-avec-bundle</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Ok, c'est sûrement le titre le plus incompréhensible de l'histoire de ce
blog. Mais je n'arrive pas à trouver mieux…</p>

<p>Prenons le Gemfile fictif suivant:</p>

<pre><code>gem a
gem b
gem c
</code></pre>

<p>Je veux mettre à jour la gem a, de la version 1.0.0 vers la nouvelle version
1.0.1.</p>

<!-- more -->


<p>Pour ça je fais évidemment:</p>

<pre><code>bundle update a
</code></pre>

<p>Mais voilà que <code>bundle</code> me répond quelque chose comme ça:</p>

<pre><code>impossible de mettre à jour la gem a
la gem a 1.0.1 dépend de la gem b 1.0.1
</code></pre>

<p>D'accord, pas de souci, je fais donc:</p>

<pre><code>bundle update b
</code></pre>

<p>Et devinez ce que ce cher <code>bundle</code> me répond ?</p>

<pre><code>impossible de mettre à jour la gem b
la gem b 1.0.1 dépend de la gem c 1.0.1
</code></pre>

<p>Bon, j'espère que c'est bientôt fini. Parce que évidemment mon Gemfile
réel ne comporte pas que 3 gems, lui. Donc je me soumet:</p>

<pre><code>bundle update c
</code></pre>

<p>Et la réponse ne tarde pas:</p>

<pre><code>impossible de mettre à jour la gem c
la gem c 1.0.1 dépend de la gem a 1.0.1
</code></pre>

<p>Super :( J'ai l'impression qu'on me demande de remplir un formulaire
administratif ! La gem a dépend de b, qui elle, dépend de c, qui à son
tour dépend de a…</p>

<p>Malgré tout, la solution est très simple (merci collègue
<a href="https://twitter.com/hellvinz">@hellvinz</a>) il suffit de mettre à jour les
3 gems en même temps:</p>

<pre><code>bundle update a b c
</code></pre>

<p>Et le tour est joué. Peut-être que vous le saviez déjà ? Mais moi j'avais
raté cette partie de Bundle.</p>

<p>Aujourd'hui j'ai encore appris quelque chose :)</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sortie de coco 0.9]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/11/sortie-de-coco-0-dot-9/"/>
    <updated>2014-02-11T20:40:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/11/sortie-de-coco-0-dot-9</id>
    <content type="html"><![CDATA[<p>La version 0.9 de la gem coco est sortie il y a quelques jours.
Coco est une bibliothèque de couverture de code (code coverage) pour
Ruby de 1.9.2 à 2.1.</p>

<!-- more -->


<p>Cette nouvelle version ajoute une option de configuration qui permet
de dire à <em>coco</em> quand démarrer, ou quand ne pas démarrer.</p>

<p>Pour les projets où la suite de tests met beaucoup de temps à tourner,
on fini souvent par jouer un seul test quand on développe, et la suite
entière seulement avant de commiter et/ou pusher. Dans ce cas, le
comportement de <em>coco</em> pouvait être assez agaçant puisque la gem
reportait une longue liste de fichiers non-couverts. Maintenant c'est
arrangé, mettez ceci dans votre fichier de configuration:</p>

<pre><code>:always_run: false
</code></pre>

<p>Lorsque vous lancez les tests comme d'habitude (ou <code>rake</code>, ou un
seul fichier, etc):</p>

<pre><code>rspec spec/
</code></pre>

<p><em>Coco</em> ne démarrera pas. Pour lui dire de faire son travail, il suffit
de définir la variable d'environnement <code>COCO</code>:</p>

<pre><code>COCO=1 rspec spec/
</code></pre>

<p>Vous pouvez <a href="https://github.com/lkdjiin/coco">télécharger</a> coco sur Github.</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sortie de coco 0.8]]></title>
    <link href="http://lkdjiin.github.io/blog/2013/12/25/sortie-de-coco-0-dot-8/"/>
    <updated>2013-12-25T19:23:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2013/12/25/sortie-de-coco-0-dot-8</id>
    <content type="html"><![CDATA[<p>La version 0.8 de la gem coco est sortie il y a quelques jours.
Coco est une bibliothèque de couverture de code (<em>code coverage</em>) pour
Ruby.</p>

<!-- more -->


<p>Cette nouvelle version est essentiellement cosmétique. Elle améliore le
visuel de la page d'index du rapport Html, et supprime le besoin des
fichiers CSS de Yahoo!</p>

<p><img src="/images/Capture-4.png"></p>

<p>Vous pouvez <a href="https://github.com/lkdjiin/coco">télécharger coco</a> depuis Github, ou l'installer directement:</p>

<pre><code>gem install coco
</code></pre>

<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
</feed>
