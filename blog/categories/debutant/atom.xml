<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : débutant | lkdjiin's blog]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/debutant/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2014-02-21T21:00:17+01:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Astuce Bash - Améliorer l'historique]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/20/astuce-bash-ameliorer-lhistorique/"/>
    <updated>2014-02-20T21:02:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/20/astuce-bash-ameliorer-lhistorique</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Dans Bash, chaque appui sur la touche «flêche vers le haut» fait défiler
l'historique des commandes. Si la commande recherchée se situe à quelques
dizaines d'appuis, ça n'est pas très pratique. Voici une astuce pour
aller plus vite.</p>

<!-- more -->


<p>Ajoutez les lignes suivantes dans votre fichier <code>~/.inputrc</code>. Si ce dernier
n'existe pas, créez le.</p>

<p><code>bash ~/.input
"\e[A": history-search-backward
"\e[B": history-search-forward
set show-all-if-ambiguous on
set completion-ignore-case on
</code></p>

<p>Maintenant il suffit de saisir les premières lettres de la commande
recherchée et la flêche vers le haut ne fera défilée que les commandes
de votre historique qui commencent par ces caractères.</p>

<p>Quand j'aurais plus de temps, j'aimerais revenir sur ces lignes pour
fournir une explication, en attendant je vous souhaite une bonne
utilisation de votre historique boosté ;)</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Comment mettre temporairement de coté ses modifications de code avec Git]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/18/comment-mettre-temporairement-de-cote-ses-modifications-de-code-avec-git/"/>
    <updated>2014-02-18T21:03:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/18/comment-mettre-temporairement-de-cote-ses-modifications-de-code-avec-git</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p><strong>Scénario</strong> : Vous êtes en train de travailler sur la branche
<code>ma-nouvelle-fonction</code> et on vous demande de réparer un bug de toute
urgence. Ce bug est sur la branche <code>master</code>.</p>

<p><strong>Problème</strong> : votre branche
<code>ma-nouvelle-fonction</code> est dans un état instable, vous n'êtes pas prêt
à commiter les changements. Il se peut que le code ne fonctionne pas,
qu'il vous faille 10 minutes pour faire des commits propres, etc.</p>

<!-- more -->


<p><strong>Solution</strong> : Utilisez <code>git stash</code>.</p>

<p>Il vous suffit d'entrer:</p>

<pre><code>git stash
</code></pre>

<p>et tous vos changements vont être mis dans la «zone de stashing». Une
espèce d'endroit à part. Votre branche <code>ma-nouvelle-fonction</code> se retrouve
dans l'état stable du dernier commit.</p>

<p>Vous pouvez maintenant créer une nouvelle branche <code>mon-fix</code> à partir de
<code>master</code>, travailler dessus, commiter, pusher, merger, enfin bref faire
ce que vous avez à faire.</p>

<p>Quand vous en avez fini, vous pouvez retourner sur la branche
<code>ma-nouvelle-fonction</code> et récupérer vos modifications:</p>

<pre><code>git checkout ma-nouvelle-fonction
git stash pop
</code></pre>

<p><code>git stash pop</code> va réintroduire vos modifications et effacer la zone de
stashing.</p>

<p>La commande <code>stash</code> peut faire bien d'autres choses que ce que je viens
de montrer, c'est tout juste le sommet de l'iceberg. Je vous recommande
donc un petit <code>git help stash</code> pour en savoir plus.</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Afficher l'arborescence d'un dossier dans le terminal]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/17/afficher-larborescence-dun-dossier-dans-le-terminal/"/>
    <updated>2014-02-17T20:56:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/17/afficher-larborescence-dun-dossier-dans-le-terminal</id>
    <content type="html"><![CDATA[<p>Pour comprendre l'arborescence des dossiers d'un projet, rien de mieux
que de l'afficher. On peut le faire dans l'explorateur graphique fournit
par l'OS, ou bien dans son éditeur/EDI, ou encore dans le terminal.</p>

<!-- more -->


<p>Je travaille depuis janvier sur OS X et je n'arrive pas à me faire à son
explorateur. Dans Vim, je n'ai pas de plugin pour faire ça, et je n'en veux
pas. Il ne me restait plus qu'à renouer avec une vieille copine, la commande
<code>tree</code>.</p>

<h2>Installation</h2>

<p><code>tree</code> n'est pas installée par défaut, il faut donc passer par le gestionnaire
de paquet.</p>

<pre><code>apt-get install tree # Debian, Ubuntu, etc

brew install tree # OS X
</code></pre>

<h2>Utilisation</h2>

<p>Afficher l'arborescence du dossier courant:</p>

<pre><code>tree
</code></pre>

<p>Afficher l'arborescence d'un sous-dossier:</p>

<pre><code>tree sous/dossier
</code></pre>

<h2>Options utiles</h2>

<p>Du moins celles que j'utilise couramment.</p>

<p>Pour avoir la couleur:</p>

<pre><code>tree -C
</code></pre>

<p>Pour un affichage graphique plus sympa:</p>

<pre><code>tree -A
</code></pre>

<p>Pour inclure les fichiers et dossiers cachés:</p>

<pre><code>tree -a
</code></pre>

<p>Pour n'afficher que les dossiers:</p>

<pre><code>tree -d
</code></pre>

<p>Pour limiter la profondeur:</p>

<pre><code>tree -L 2 # N'affiche que les sous-dossiers directs
</code></pre>

<h2>Alias</h2>

<p>Pour finir, voici les alias que j'utilise:</p>

<p><code>bash
alias tree='tree -CA'
alias dirtree='tree -d'
</code></p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[De Linux (Debian) vers OS X - Un terminal qui déchire]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/14/de-linux-debian-vers-os-x-un-terminal-qui-dechire/"/>
    <updated>2014-02-14T20:42:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/14/de-linux-debian-vers-os-x-un-terminal-qui-dechire</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Aujourd'hui : Quel terminal utiliser sur OS X ?</p>

<p>Ces derniers jours j'ai du travailler avec une dizaine de sessions
shell ouverte en même temps, tout en surveillant régulièrement plusieurs
d'entre elles pour voir si des processus plantait. Je n'en pouvait plus
du terminal par défaut de OS X…</p>

<!-- more -->


<h2>iTerm2, le terminal parfait ?</h2>

<p>Il y a quelque temps un collègue m'a parlé de <a href="http://www.iterm2.com/#/section/home">iTerm2</a>
comme étant potentiellement ce que je cherchais. J'ai eu aujourd'hui
le temps de l'installer et de me familiariser avec. Et depuis que je
travaille sur OS X, c'est la première fois que je dit <strong>Waou !!!</strong>
à propos d'un logiciel. Il a un tas de très très bonnes fonctionnalités,
les raccourcis clavier sont très bien pensés de base et sont
configurables, on peut splitter dans tous les sens, la gestion du
clipboard est intelligente, etc.</p>

<p>Allez, une dernière fois : <strong>Waou !!!</strong>.</p>

<p><a href="/blog/2014/02/13/de-linux-debian-vers-os-x-lauto-completion-dans-irb/">Astuce précédente</a></p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[De Linux (Debian) vers OS X - L'auto-complétion dans Irb]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/13/de-linux-debian-vers-os-x-lauto-completion-dans-irb/"/>
    <updated>2014-02-13T20:39:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/13/de-linux-debian-vers-os-x-lauto-completion-dans-irb</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Aujourd'hui : Comment obtenir l'auto-complétion dans <code>irb</code>,
certaines machines OS X (dont la mienne) souffrant de ce bug.</p>

<!-- more -->


<h2>Activer l'auto-complétion dans irb</h2>

<p>Si votre <code>irb</code> refuse de faire de l'auto-complétion, c'est un bug.
Pour l'activer, vous pouvez utiliser la
<a href="https://github.com/cldwalker/bond">gem Bond</a> (j'adore ce jeu de
mot, <em>-si ça en est un ?&ndash;</em>):</p>

<p><code>ruby
require 'bond'
Bond.start
</code></p>

<p>Mieux vaut bien sûr mettre ça directement dans le fichier <code>.irbrc</code>,
par exemple:</p>

<p><code>ruby .irbrc
begin
  require 'bond'
  Bond.start
rescue LoadError =&gt; err
  warn "Couldn't load bond: #{err}"
end
</code></p>

<p><a href="/blog/2014/02/14/de-linux-debian-vers-os-x-un-terminal-qui-dechire/">Astuce suivante</a>  <br/>
<a href="/blog/2014/02/06/de-linux-debian-vers-os-x-dossier-parent-dans-lexplorateur/">Astuce précédente</a></p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
</feed>
