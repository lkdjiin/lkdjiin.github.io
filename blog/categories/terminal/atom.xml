<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : terminal | lkdjiin's blog]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/terminal/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2014-02-27T21:00:45+01:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[La commande cat peut aussi afficher les numéros de lignes]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/27/la-commande-cat-peut-aussi-afficher-les-numeros-de-lignes/"/>
    <updated>2014-02-27T20:48:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/27/la-commande-cat-peut-aussi-afficher-les-numeros-de-lignes</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Je crois bien que je n'avais jamais regardé la documentation de la commande
unix <code>cat</code> jusqu'à il y a quelques jours. Je viens donc tout juste
d'apprendre qu'on pouvait afficher les numéros de lignes.</p>

<!-- more -->


<p>Afficher un fichier avec <code>cat</code>:</p>

<p><code>bash
$ cat exemple
Je suis
un fichier
exemple.
</code></p>

<p>Afficher avec les numéros de ligne:</p>

<p>``` bash
$ cat -n exemple</p>

<pre><code> 1  Je suis
 2  un fichier
 3  exemple.
</code></pre>

<p>```</p>

<p>Voilà, ça peut servir de temps en temps…</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Écrire un éditeur pour le terminal - partie 3]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/24/ecrire-un-editeur-pour-le-terminal-partie-3/"/>
    <updated>2014-02-24T20:59:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/24/ecrire-un-editeur-pour-le-terminal-partie-3</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>Comment connaitre le nombre de lignes et de colonnes du terminal ?
Voici la réponse…</p>

<!-- more -->


<p>Le programme suivant utilise les méthodes <code>cols</code> et <code>lines</code> de la
bibliothèque <code>Curses</code> pour avoir ces informations:</p>

<p>``` ruby
require &lsquo;curses&rsquo;
include Curses</p>

<p>begin
  init_screen
  addstr(&ldquo;#{cols} x #{lines}&rdquo;)
  getch
ensure
  close_screen
end
```</p>

<p>Redimensionnez votre terminal et relancez le programme pour être sûr
que ça fonctionne ;)</p>

<p>Ces informations nous seront bien utiles pour l'écriture d'un éditeur…</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Écrire un éditeur pour le terminal - partie 2]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/23/ecrire-un-editeur-pour-le-terminal-partie-2/"/>
    <updated>2014-02-23T16:33:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/23/ecrire-un-editeur-pour-le-terminal-partie-2</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>Comme j'ai eu un peu trop de problêmes à faire tourner <em>ncurses</em> sur
plusieurs machines, j'ai décidé de repasser à <em>curses</em>.</p>

<!-- more -->


<p>Voici donc le programme de <a href="/blog/2014/02/22/ecrire-un-editeur-pour-le-terminal-partie-1/">la dernière fois</a>, réécrit pour <em>curses</em>:</p>

<p>``` ruby redvim.rb</p>

<h1>!/usr/bin/env ruby</h1>

<p>require &lsquo;curses&rsquo;
include Curses</p>

<p>file = File.open ARGV[0]</p>

<p>begin
  init_screen
  file.each {|line| addstr(line) }
  refresh
  getch
ensure
  close_screen
end
```</p>

<h2>Un problème avec Unicode ?</h2>

<p>Il se peut que vous ayez des problèmes pour afficher correctement les
caractères unicode. À tous les coups, c'est parce que la gem <em>curses</em>
à été compilée sans les headers indispensables.
Installez donc ces headers: libncurses5.dev et libncurses5w.dev, ensuite
vous avez deux solutions:</p>

<ol>
<li>Si vous utilisez Ruby 2.1, désinstallez <em>curses</em> et réinstallez la:
<code>gem uninstall curses &amp;&amp; gem install curses</code>.</li>
<li>Si vous utilisez Ruby 2.0 ou inférieur, <em>curses</em> fait partie de la
bibliothèque standard, c'est donc Ruby qu'il faudra recompiler.</li>
</ol>


<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Écrire un éditeur pour le terminal - partie 1]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/22/ecrire-un-editeur-pour-le-terminal-partie-1/"/>
    <updated>2014-02-22T15:14:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/22/ecrire-un-editeur-pour-le-terminal-partie-1</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>Après avoir parler quelque peu de ncurses, on passe à la première étape
de l'écriture d'un éditeur qui ressemblerait à Vim: afficher le contenu
d'un fichier.</p>

<!-- more -->


<p>Le progamme est très proche de ce qu'on avait obtenu
<a href="/blog/2014/02/16/curses-et-ncurses-en-ruby/">la dernière fois</a>,
et pour cause, la seule différence étant l'ouverture/affichage du
fichier passé en argument:</p>

<p>``` ruby redvim.rb</p>

<h1>!/usr/bin/env ruby</h1>

<p>require &lsquo;ffi-ncurses&rsquo;
include FFI::NCurses</p>

<p>file = File.open ARGV[0]</p>

<p>begin
  initscr
  file.each {|line| printw line }
  refresh
  getch
ensure
  endwin
end
```</p>

<p>N'oubliez pas de donner les droits d'exécution à ce programme:</p>

<pre><code>chmod +x redvim.rb
</code></pre>

<p>Et lancez-le ainsi pour qu'il s'affiche lui-même:</p>

<pre><code>./redvim.rb redvim.rb
</code></pre>

<p>Si vous essayez de lui faire afficher un fichier trop long pour tenir
dans le terminal, il va se passer des choses bizarres. On corrigera
ça plus tard. Pour l'instant notre programme affiche un fichier, c'est
déjà le début de la gloire ;)</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Afficher l'arborescence d'un dossier dans le terminal]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/17/afficher-larborescence-dun-dossier-dans-le-terminal/"/>
    <updated>2014-02-17T20:56:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/17/afficher-larborescence-dun-dossier-dans-le-terminal</id>
    <content type="html"><![CDATA[<p>Pour comprendre l'arborescence des dossiers d'un projet, rien de mieux
que de l'afficher. On peut le faire dans l'explorateur graphique fournit
par l'OS, ou bien dans son éditeur/EDI, ou encore dans le terminal.</p>

<!-- more -->


<p>Je travaille depuis janvier sur OS X et je n'arrive pas à me faire à son
explorateur. Dans Vim, je n'ai pas de plugin pour faire ça, et je n'en veux
pas. Il ne me restait plus qu'à renouer avec une vieille copine, la commande
<code>tree</code>.</p>

<h2>Installation</h2>

<p><code>tree</code> n'est pas installée par défaut, il faut donc passer par le gestionnaire
de paquet.</p>

<pre><code>apt-get install tree # Debian, Ubuntu, etc

brew install tree # OS X
</code></pre>

<h2>Utilisation</h2>

<p>Afficher l'arborescence du dossier courant:</p>

<pre><code>tree
</code></pre>

<p>Afficher l'arborescence d'un sous-dossier:</p>

<pre><code>tree sous/dossier
</code></pre>

<h2>Options utiles</h2>

<p>Du moins celles que j'utilise couramment.</p>

<p>Pour avoir la couleur:</p>

<pre><code>tree -C
</code></pre>

<p>Pour un affichage graphique plus sympa:</p>

<pre><code>tree -A
</code></pre>

<p>Pour inclure les fichiers et dossiers cachés:</p>

<pre><code>tree -a
</code></pre>

<p>Pour n'afficher que les dossiers:</p>

<pre><code>tree -d
</code></pre>

<p>Pour limiter la profondeur:</p>

<pre><code>tree -L 2 # N'affiche que les sous-dossiers directs
</code></pre>

<h2>Alias</h2>

<p>Pour finir, voici les alias que j'utilise:</p>

<p><code>bash
alias tree='tree -CA'
alias dirtree='tree -d'
</code></p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
</feed>
