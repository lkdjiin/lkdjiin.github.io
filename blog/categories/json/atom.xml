<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : json | lkdjiin's blog]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/json/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2014-06-25T21:10:04+02:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Le format JSON et les caractères de fin de lignes]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/03/18/le-format-json-et-les-caracteres-de-fin-de-lignes/"/>
    <updated>2014-03-18T21:28:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/03/18/le-format-json-et-les-caracteres-de-fin-de-lignes</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Dans un fichier au format JSON, on ne met pas tout ce qu'on veut…
Notamment en ce qui concerne les caractères de fin de ligne et les
tabulations.</p>

<!-- more -->


<p>En effet, ceux-ci ne sont pas autorisés à l'intérieur des chaines de
caractères. Voici un exemple.</p>

<p>Tout d'abord, pas de caractères spéciaux:</p>

<p><code>json doc.json
{
  "item" : "article"
}
</code></p>

<p>``` irb
$ rvm use 2.1.0
Using /home/xavier/.rvm/gems/ruby-2.1.0
$ irb</p>

<blockquote><blockquote><p>require &lsquo;json&rsquo;
=> file = IO.read File.expand_path(&lsquo;./doc.json&rsquo;)
JSON.parse file
=> {&ldquo;item&rdquo;=>&ldquo;Article&rdquo;}
```</p></blockquote></blockquote>

<p>Tout va bien.</p>

<p>Maintenant avec des caractères de fin de lignes échappés:</p>

<p><code>json doc.json
{
  "item" : "article\ndescription\nprice"
}
</code></p>

<p>``` irb
=> file = IO.read File.expand_path(&lsquo;./doc.json&rsquo;)
=> &ldquo;{\n  \"item\&rdquo; : \&ldquo;article\ndescription\nprice\&rdquo;\n}\n"</p>

<blockquote><blockquote><p>JSON.parse file
=> {&ldquo;item&rdquo;=>&ldquo;article\ndescription\nprice&rdquo;}
```</p></blockquote></blockquote>

<p>C'est toujours bon.</p>

<p>Par contre, avec des fins de lignes «en dur» dans le fichier:</p>

<p>``` json doc.json
{
  &ldquo;item&rdquo; : &ldquo;Article</p>

<pre><code>description
price"
</code></pre>

<p>}
```</p>

<p>``` irb</p>

<blockquote><blockquote><p>file = IO.read File.expand_path(&lsquo;./doc.json&rsquo;)
=> &ldquo;{\n  \"item\&rdquo; : \&ldquo;Article\n    description\n    price\&rdquo;\n}\n"
JSON.parse file
JSON::ParserError: 757: unexpected token at &lsquo;{
  &ldquo;item&rdquo; : &ldquo;Article</p>

<pre><code>description
price"
</code></pre>

<p>}
&lsquo;
```</p></blockquote></blockquote>

<p>Rien ne va plus. C'est pareil avec les tabulations.</p>

<p>Si vous récupérez ce genre de fichier, vous pouvez les nettoyer en
remplaçant par exemple les tabulations et les fins de ligne par un
espace:</p>

<p><code>ruby
file.gsub(/[\t\n]/, ' ')
</code></p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
</feed>
