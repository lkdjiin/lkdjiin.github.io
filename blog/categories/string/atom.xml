<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : string | Xavier Nayrac]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/string/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2015-07-02T18:34:20+02:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Du nouveau dans Ruby 2.1: Le suffixe f pour les chaînes de caractères]]></title>
    <link href="http://lkdjiin.github.io/blog/2013/11/26/du-nouveau-dans-ruby-2-dot-1-le-suffixe-f-pour-les-chaines-de-caracteres/"/>
    <updated>2013-11-26T20:33:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2013/11/26/du-nouveau-dans-ruby-2-dot-1-le-suffixe-f-pour-les-chaines-de-caracteres</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Aujourd’hui c’est au tour du nouveau suffixe <code>f</code> (comme frozen) d’être passé
en revue.</p>

<!-- more -->

<h2 id="avant-ruby-21">Avant Ruby 2.1</h2>
<p>Les chaînes de caractères en Ruby sont des objets <em>mutables</em>. Ce qui
signifie qu’à chaque fois que l’interpréteur rencontre <code>"foo"</code>, il crée
un nouvel objet:</p>

<pre><code>[~]⇒ rvm use 2.0.0
[~]⇒ irb
&gt;&gt; "foo".object_id
74667700
&gt;&gt; "foo".object_id
74664050
</code></pre>

<p>Ce qui peut influer sur les performances d’un programme quand on compare
beaucoup de chaînes. Voici un exemple trivial:</p>

<p><code>ruby
def foo?(string)
  foo = "foo"
  p foo.object_id
  string == foo
end
</code></p>

<p>Encore une fois, on peut constater qu’un nouvel objet est créé à chaque
appel de la méthode:</p>

<p><code>irb
&gt;&gt; foo? "bépo"
76675080
false
&gt;&gt; foo? "bar"
76669680
false
</code></p>

<p>Et géler (<em>freeze</em>) l’objet n’empêchera pas sa création à chaque appel:</p>

<p><code>irb
&gt;&gt; def foo
&gt;&gt;   foo = "foo".freeze
&gt;&gt;   foo.object_id
&gt;&gt; end
nil
&gt;&gt; foo
82081130
&gt;&gt; foo
82079520
</code></p>

<h2 id="avec-ruby-21">Avec Ruby 2.1</h2>

<pre><code>[~]⇒ rvm use 2.1.0-preview1
[~]⇒ irb
</code></pre>

<p>Le suffixe <code>f</code> permet de géler (<em>freeze</em>) les chaînes de
caractères:</p>

<p><code>irb
&gt;&gt; a = "foo"f
=&gt; "foo"
&gt;&gt; a.reverse!
RuntimeError: can't modify frozen String
</code></p>

<p>Et surtout, le suffixe <code>f</code> les gèlent une fois pour toutes.
L’exemple précédent donne ceci:</p>

<p><code>irb
&gt;&gt; def foo?(string)
&gt;&gt;   foo = "foo"f
&gt;&gt;   p foo.object_id
&gt;&gt;   string == foo
&gt;&gt; end
=&gt; :foo?
&gt;&gt; foo? "bépo"
79029020
=&gt; false
&gt;&gt; foo? "bar"
79029020
=&gt; false
</code></p>

<p><strong>Source (pdf)</strong> <a href="http://www.atdot.net/~ko1/activities/toruby05-ko1.pdf">toruby</a></p>

<p><strong>Edit du 1er décembre 2013</strong> Cette fonctionnalité a été supprimé dans
la version <a href="https://www.ruby-lang.org/en/news/2013/11/22/ruby-2-1-0-preview2-is-released/">2.1.0-preview2</a>.</p>

<script id="fb33k8u">(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>

<p>À demain.</p>

<p></p>

]]></content>
  </entry>
  
</feed>
