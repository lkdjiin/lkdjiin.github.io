<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : intermédiaire | lkdjiin's blog]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/intermediaire/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2014-02-12T20:48:42+01:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Quelques commandes Git par Michael Hartl]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/12/quelques-commandes-git-par-michael-hartl/"/>
    <updated>2014-02-12T20:29:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/12/quelques-commandes-git-par-michael-hartl</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>Michael Hartl, l'auteur de <a href="http://ruby.railstutorial.org/">Ruby on Rails Tutorial</a>
a écrit plusieurs commandes Git bien utiles.</p>

<!-- more -->


<p>Le code se trouve sur Github : <a href="https://github.com/mhartl/git-utils">git-utils</a>.
On y trouve par exemple une commande <code>git cleanup</code>, qui supprime toutes
les branches locales qui ne sont pas encore mergées dans la branche
courante. Ou encore <code>git merge-branch</code>, qui merge la branche courante
dans master par défaut.</p>

<p>Aujourd'hui, toutes ces commandes sont écrites en Ruby, mais avant
elle l'était en Bash, comme la suivante:</p>

<p>``` bash</p>

<h1>!/bin/bash git-merge-branch</h1>

<h1>Copyright &copy; 2013 Michael Hartl</h1>

<h1>Released under the MIT License (<a href="http://opensource.org/licenses/MIT">http://opensource.org/licenses/MIT</a>)</h1>

<h1>Merges the current branch into the given branch (defaults to master).</h1>

<h1>E.g., &lsquo;git merge-branch foobar&rsquo; merges the current branch into foobar.</h1>

<h1>&lsquo;git merge-branch&rsquo;, merges the current branch into master.</h1>

<h1>git merge-branch uses the &mdash;no-ff &mdash;log options to ensure that the</h1>

<h1>merge creates a new commit object and that the individual commits appear</h1>

<h1>in the log file.</h1>

<p>CURRENT_BRANCH=<code>git rev-parse --abbrev-ref HEAD</code>
if [ $# -eq 1 ]
then
  TARGET_BRANCH=$1
else
  TARGET_BRANCH=&ldquo;master&rdquo;
fi
git checkout $TARGET_BRANCH
git merge &mdash;no-ff &mdash;log $CURRENT_BRANCH
```</p>

<p>Essayez les, certaines pourraient bien vous changer la vie.</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim - Sauvegarder et quitter les fichiers]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/02/01/vim-sauvegarder-et-quitter-les-fichiers/"/>
    <updated>2014-02-01T20:12:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/02/01/vim-sauvegarder-et-quitter-les-fichiers</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>Il est temps pour moi de faire un point sur les différentes méthodes
qu'offre Vim pour quitter et/ou sauvegarder un fichier.</p>

<!-- more -->


<h2>Les basiques</h2>

<p>Voici, selon moi, les commandes à retenir en premier lieu.</p>

<p>Pour sauvegarder un fichier, utilisez la commande <code>write</code>, ou
plutôt son raccourci <code>w</code>:</p>

<pre><code>:w
:write
</code></pre>

<p>Je rappelle qu'on peut facilement obtenir une aide exhaustive sur une
commande quelconque:</p>

<pre><code>:h :write
</code></pre>

<p>Et je conseille de lire systématiquement l'aide de Vim sur les
commandes dont je vais vous parler. Vous découvrirez ainsi des tas
de variantes qui pourrait vous être utile.</p>

<p>Pour sauvegarder tous les fichiers en une seule fois:</p>

<pre><code>:wall
</code></pre>

<p>Pour quitter un fichier, on utilise <code>quit</code>, ou son raccourci <code>q</code>:</p>

<pre><code>:q
:quit
</code></pre>

<p>De même, pour quitter tous les fichiers (et fermer Vim):</p>

<pre><code>:qa
:qall
</code></pre>

<p>Si vous voulez fermer un fichier modifié <em>sans</em> enregistrer les
modifications, la commande suivante est indispensable:</p>

<pre><code>:q!
</code></pre>

<p>Voilà pour les basiques. Ces commandes sont simples à mémoriser.</p>

<h2>Les combinaisons</h2>

<p>Il arrive souvent qu'on veuille sauvegarder un fichier, <em>et en même
temps</em> le fermer. Je recommenderais aux débutants d'utiliser la
commande suivante:</p>

<pre><code>:wq
</code></pre>

<p>Elle est très facile à mémoriser, étant la combinaison de <code>write</code> et
de <code>quit</code>.</p>

<p>Quand du temps aura passé et que vous serez prêt à en apprendre
d'autres, essayez donc les deux qui suivent:</p>

<p>Un simple <code>:x</code> permet de sauver/quitter le fichier, vous gagnez une
touche par rapport à <code>:wq</code>:</p>

<pre><code>:x
</code></pre>

<p>Suivant le layout de votre clavier, la suivante peut vous convenir plus ou
moins. C'est la seule qui soit en mode normal et non pas en mode commande,
rapide comme l'éclair, je l'adore:</p>

<pre><code>ZZ
</code></pre>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installation du plugin Airline pour Vim - partie 4]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/01/28/installation-du-plugin-airline-pour-vim-partie-4/"/>
    <updated>2014-01-28T20:42:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/01/28/installation-du-plugin-airline-pour-vim-partie-4</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-1'>Niveau : <span>facile</span></div></p>

<p>Après <a href="/blog/2014/01/25/installation-du-plugin-airline-pour-vim-partie-1/">avoir installé</a> le plugin Airline pour Vim,
après <a href="/blog/2014/01/26/installation-du-plugin-airline-pour-vim-partie-2/">avoir configuré le thème</a>,
puis <a href="/blog/2014/01/27/installation-du-plugin-airline-pour-vim-partie-3/">personnalisé quelques sections</a>,
vous pensiez en avoir fini. Mais il se peut que la branche git
n'apparaisse pas dans votre barre de statut ?
Comment faire pour que Airline affiche le nom de la branche git ?</p>

<!-- more -->


<p>En fait, il ne peut pas. Enfin pas vraiment. Airline ne fait pas tout.
Par contre il intègre très bien d'autres plugins. Et notamment
l'excellent vim-fugitive de Tim Pope. Donc, pour que Airline affiche
votre branche git, il vous suffit d'installer vim-fugitive. Par
exemple, avec Pathogen:</p>

<pre><code>git clone git://github.com/tpope/vim-fugitive.git ~/.vim/bundle/vim-fugitive
</code></pre>

<p>Et voilà.</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installation du plugin Airline pour Vim - partie 3]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/01/27/installation-du-plugin-airline-pour-vim-partie-3/"/>
    <updated>2014-01-27T21:01:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/01/27/installation-du-plugin-airline-pour-vim-partie-3</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>Maintenant qu'on a personnalisé l'apparence de Airline, voyons
comment on peut personnaliser les informations des sections.</p>

<!-- more -->


<p>Tout d'abord, la section qui affiche le numéro de ligne et de
colonne du curseur (la section la plus à droite) ne me plait pas
du tout. Je voudrais supprimer le petit symbole (qui prend de la
place pour rien) et le pourcentage (dont je n'ai jamais compris
l'intérêt) et ajouter le nombre de lignes du fichier. Je voudrais
donc un truc comme ça:</p>

<pre><code>ligne courante / total lignes : colonne
</code></pre>

<p>La documentation de Airline (<code>:h airline</code>) nous apprends que chaque
section possède un petit nom (pour la dernière c'est <code>z</code>), est
personnalisable, et qu'on peut même en ajouter. La documentation de
Vim (<code>:h 'statusline'</code>) nous permet de savoir quoi mettre:</p>

<p><code>vim
let g:airline_section_z = ' %l / %L : %c '
</code></p>

<p>Et voilà.</p>

<p>Sur le même principe, je veux modifier la section centrale, celle qui
affiche le nom du fichier. Par défaut, c'est le nom complet, avec son
chemin, qui est affiché. Comme je dispose déjà de cette information dans
la barre de titre de la fenêtre, je n'en ai pas besoin et le nom du
fichier sans son chemin me suffira:</p>

<p><code>vim
let g:airline_section_c = '%t %m'
</code></p>

<p><code>%t</code> est le nom du fichier et <code>%m</code> est la marque de modification
(le <code>[+]</code>).</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installation du plugin Airline pour Vim - partie 2]]></title>
    <link href="http://lkdjiin.github.io/blog/2014/01/26/installation-du-plugin-airline-pour-vim-partie-2/"/>
    <updated>2014-01-26T16:03:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2014/01/26/installation-du-plugin-airline-pour-vim-partie-2</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-2'>Niveau : <span>intermédiaire</span></div></p>

<p>Après <a href="/blog/2014/01/25/installation-du-plugin-airline-pour-vim-partie-1/">l'installation basique du plugin Airline</a>, voyons maintenant
comment modifier quelque peu le thème.</p>

<!-- more -->


<p>On peut visualiser les thèmes disponibles pour Airline
<a href="https://github.com/bling/vim-airline/wiki/Screenshots">sur cette page</a>.
J'ai choisi wombat pour l'instant, puisque je trouve que c'est celui
qui <em>colle</em> le mieux avec mon jeu de couleurs actuel. Voici ce qu'il
faut ajouter au <code>.vimrc</code> pour changer de thème:</p>

<p><code>vim
let g:airline_theme='wombat'
</code></p>

<p>Si vous n'êtes pas sûr du nom pour le thème que vous avez choisi,
regardez le nom du fichier dans le dossier
<code>vim-airline/autoload/airline/themes</code>.</p>

<p>J'ai ensuite installé quelques polices de caractères patchées pour Powerline,
trouvées
<a href="https://github.com/Lokaltog/powerline-fonts">ici</a>, mais aucunes
ne m'a vraiment séduite. J'utilise la font <code>Inconsolata-g</code>, qui me
convient parfaitement, je ne vois donc pas de raison d'en changer.</p>

<p>Il faut maintenant paramétrer les symboles pour les bords des sections,
la branche git, les fichiers en lectures seules, etc. Mettez donc
ceci dans votre <code>.vimrc</code>:</p>

<p><code>vim
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
</code></p>

<p>Comme il n'est pas certain que les symboles ci-dessus apparaissent dans
votre navigateur, en voici une version en image:</p>

<p><img src="/images/symboles-airline.png"></p>

<p>La prochaine fois, on verra comment modifier une section.</p>

<script id='fb33k8u'>(function(i){var f,s=document.getElementById(i);f=document.createElement('iframe');f.src='//api.flattr.com/button/view/?uid=lkdjiin&url='+encodeURIComponent(document.URL);f.title='Flattr';f.height=62;f.width=55;f.style.borderWidth=0;s.parentNode.insertBefore(f,s);})('fb33k8u');</script>


<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
</feed>
