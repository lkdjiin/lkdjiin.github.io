<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Catégorie : linux | lkdjiin's blog]]></title>
  <link href="http://lkdjiin.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://lkdjiin.github.io/"/>
  <updated>2013-12-12T21:13:29+01:00</updated>
  <id>http://lkdjiin.github.io/</id>
  <author>
    <name><![CDATA[Xavier Nayrac]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Utiliser Vim comme un tableur sur Linux (enfin presque)]]></title>
    <link href="http://lkdjiin.github.io/blog/2013/11/24/utiliser-vim-comme-un-tableur-sur-linux-enfin-presque/"/>
    <updated>2013-11-24T20:55:00+01:00</updated>
    <id>http://lkdjiin.github.io/blog/2013/11/24/utiliser-vim-comme-un-tableur-sur-linux-enfin-presque</id>
    <content type="html"><![CDATA[<p><div class='level-tag level-tag-3'>Niveau : <span>avancé</span></div></p>

<p><a href="http://lkdjiin.github.io/blog/2013/11/23/pourcentage-des-issues-par-langages-sur-github/">Hier</a> j'ai donné une liste des rapports issues/nombre de dépots
par langages sur Github. Aujourd'hui je montre comment j'ai utilisé
Vim (sur linux) pour calculer ce rapport et formater la liste.</p>

<!-- more -->


<p>Voici la liste de départ, à récupérer <a href="http://hubreports.yougeezer.co.uk/languages">ici</a>, il s'agit juste d'un
copier/coller de la page web et je n'ai pris ici que les 5 premiers,
c'est suffisant pour la démonstration:</p>

<pre><code>1   JavaScript .js  560,116 891,531 319,537 4,951   1,147   343,483
2   Ruby .rb    466,411 469,913 175,577 2,726   607 147,339
3   Java .java  388,610 376,683 231,186 4,185   825 161,136
4   Python .py  281,835 323,858 130,034 2,538   685 184,908
5   PHP .php    275,411 289,899 155,941 2,331   454 150,024
</code></pre>

<p>Alors on n'y comprend rien puisque les colonnes sont invisibles. On va
former de belles colonnes à l'aide de l'utilitaire unix <strong>column</strong>:</p>

<p><code>vim
:%! column -t
</code></p>

<p>Et voici le résultat:</p>

<pre><code>1  JavaScript  .js    560,116  891,531  319,537  4,951  1,147  343,483
2  Ruby        .rb    466,411  469,913  175,577  2,726  607    147,339
3  Java        .java  388,610  376,683  231,186  4,185  825    161,136
4  Python      .py    281,835  323,858  130,034  2,538  685    184,908
5  PHP         .php   275,411  289,899  155,941  2,331  454    150,024
</code></pre>

<p>Les colonnes qui m'intéresse sont la 1 (rang), la 2 (langage), la 4
(nombre de dépots) et la dernière (nombre d'issues actives).
Je vais donc sélectionner la 3ème colonne à l'aide de <code>Ctrl-v</code> et la
supprimer (avec <code>d</code>). Voici ce que donne la sélection d'une colonne en
image si vous n'êtes pas familier de Vim:</p>

<p><img src="/images/vim-column.png"></p>

<p>Je répète ensuite la sélection/suppression pour les autres colonnes et
j'obtiens:</p>

<pre><code>1  JavaScript  560,116  343,483
2  Ruby        466,411  147,339
3  Java        388,610  161,136
4  Python      281,835  184,908
5  PHP         275,411  150,024
</code></pre>

<p>Il faut maintenant ajouter une colonne de chiffre qui contiendras le rapport
d'issues par dépots en pourcentage. C'est à dire la 4ème colonne divisée par
la 3ème colonne, le tout multiplié par 100. C'est classiquement un boulot
qu'on confierai au langage Awk, mais j'ai décidé il y a quelques temps de
faire le plus possible de choses avec Ruby, voici donc ce que j'ai écrit
dans Vim:</p>

<p><code>vim
:%! ruby -aple '$_ += " \#{(($F[3].to_f/$F[2].to_f)*100).to_i}"'
</code></p>

<p>Un peu cryptique ? Je l'avoue bien volontiers, mais les one-shots sont
rarement fait pour (peuvent rarement) être lisible… Je ferais certainement
un article sur les switchs a, p, l et e de <code>ruby</code>. Quoiqu'il en soit, voici
le résultat:</p>

<pre><code>1  JavaScript  560,116  343,483 61
2  Ruby        466,411  147,339 31
3  Java        388,610  161,136 41
4  Python      281,835  184,908 65
5  PHP         275,411  150,024 54
</code></pre>

<p>Il reste à trier cette liste sur la 5ème et dernière colonne, un jeu d'enfant
avec l'utilitaire unix <code>sort</code>:</p>

<p><code>vim
:%! sort -k5nr
</code></p>

<pre><code>4  Python      281,835  184,908 65
1  JavaScript  560,116  343,483 61
5  PHP         275,411  150,024 54
3  Java        388,610  161,136 41
2  Ruby        466,411  147,339 31
</code></pre>

<p>Voilà, ça prend un certain temps à décrire mais c'est rapide à faire quand
vous avez sous le coude une paire d'utilitaires qui déchirent !</p>

<p>À demain.</p>

<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Modern IE pour Linux: foutage de gueule]]></title>
    <link href="http://lkdjiin.github.io/blog/2013/07/20/modern-ie-pour-linux-foutage-de-gueule/"/>
    <updated>2013-07-20T08:44:00+02:00</updated>
    <id>http://lkdjiin.github.io/blog/2013/07/20/modern-ie-pour-linux-foutage-de-gueule</id>
    <content type="html"><![CDATA[<p><strong>Question:</strong> «Que doit faire régulièrement un développeur du web ?»</p>

<p><strong>Réponse:</strong> «Tester le rendu de son site sur plusieurs navigateurs.»</p>

<p>Internet Explorer fait partie du lot. Qu'on le veuille ou non, il faut
tester nos sites dans IE, même quand on travaille sur Linux.
Au début de l'année, Microsoft a lancé
<a href="http://www.modern.ie/fr">Modern.IE</a>. L'ancien site tout moche où on
téléchargait les VMs qui ne fonctionnaient que sur Windows à fait place
à un site moderne, new look, qui te
promet (dixit le dit site):</p>

<p><blockquote><p>Facilitez vos tests pour Internet Explorer</p></blockquote></p>

<!-- more -->


<p>On te dis qu'on va bien s'occuper de toi. J'ai eu envie d'y croire alors
j'ai essayé. Ce qui m'intéresse ce sont les outils de virtualisation, alors
rendez vous sur la page <a href="http://www.modern.ie/fr/virtualization-tools.">http://www.modern.ie/fr/virtualization-tools.</a> Voici
ce qu'on peut y lire:</p>

<p><blockquote><p>Testez votre site. Dans tout navigateur sur un Mac ou un ordinateur Windows.</p></blockquote></p>

<p>Ça aurait du me mettre la puce à l'oreille mais je continue quand même.
Deux clics plus tard, j'obtiens la liste des VMs pour Linux/VirtualBox.
Premier constat: la taille des VMs, toujours aussi gargantuesque,
5 ou 6 gigas pour certaines.
Bon, c'est pas ça qui va m'arrêter, mais faut quand même savoir que leur
serveur ne supporte pas le resume…</p>

<p>Quelques heures plus tard, mission accomplie, IE 9 est téléchargé. Je
lance le script d'install qui tente de décompresser la bête.
Mais non. Comment ça, non ? Ben non, fichier corrompu (!?). J'ai un peu la nausée à l'idée de devoir
re-télécharger 5 Go. J'essaye de les décompresser avec
deux trois programmes classiques que j'ai sous la main. Rien à faire.
Corrompu…</p>

<p>Retour sur le site Modern.IE pour trouver ça: «Need more help downloading and installing the VMs?
<a href="http://blog.reybango.com/2013/02/04/making-internet-explorer-testing-easier-with-new-ie-vms/">Try Rey Bango’s blog</a>.»</p>

<p>Ok je fais ça. Qu'est-ce-que j'y apprends:</p>

<p><blockquote><p>A number of people have mentioned that they’ve had trouble unzipping the<br/>images and that they may be corrupt. They’re not corrupt. There’s an issue in<br/>both OSX &amp; Linux where using the OS’s default zip tool is failing to open the<br/>.zip file properly. We’re aware of this and are looking into it. The interim<br/>solution is to use a 3rd party unzip tool like “The Unarchiver” in the Apple<br/>app store or Peazip for Linux. These will correctly unzip the .zip files and<br/>give you working images.</p></blockquote></p>

<p>Traduction rapide (et sûrement un peu maladroite) pour les non-anglophones, accrochez vous, ça vaut son
pesant de cacahuètes:</p>

<p><blockquote><p>Plusieurs personnes ont rapporté avoir des problèmes à décompresser les images<br/>et que celles-ci pouvaient être corrompues. Elles ne sont pas corrompues. Il y<br/>a un problème dans OSX et Linux, qui empêche d'ouvrir proprement les fichiers<br/>zip avec les outils par défaut de l'OS. On est au courant de ça et on regarde<br/>ce qu'on peut faire. La solution provisoire est d'utiliser un outil de<br/>décompression tiers, comme &ldquo;The Unarchiver&rdquo; dans l'app store ou bien Peazip<br/>pour Linux. Ces outils décompresseront correctement les zip et produiront des<br/>images qui fonctionnent.</p></blockquote></p>

<p>Sans rire !? C'est tout ce que Microsoft a à dire la-dessus ? «C'est pas
nous, m'sieur, c'est encore la faute à OSX et Linux tout ça.»
Vous m'imaginez dire ça au boulot:</p>

<p>  <strong>Client:</strong> Il y a un problème avec le site, il fonctionne correctement dans
IE mais des utilisateurs nous ont rapporté qu'il s'affichait mal avec
Chrome et Firefox.</p>

<p>  <strong>Moi:</strong> Non, il ne s'affiche pas mal, il y a juste un problème avec Firefox et Chrome
qui empêche mon site de s'afficher correctement. En attendant que je corrige
ça, vos utilisateurs peuvent toujours regarder le site avec IE.</p>

<p>Le post date de février, c'est toujours pas corrigé. La suite de l'histoire
maintenant: Je n'ai jamais entendu
parler de ce <em>Peazip</em>, je cherche un peu et fini par l'installer. Après 10
minutes d'essais infructeux, pendant lesquelles j'ai du essuyer à peu près
40 bugs (sans rire), je le désinstalle et j'abandonne.
J'ai perdu
mon temps mais c'est de ma faute, qu'est ce qui m'a pris de croire
que Microsoft s'interessait aux utilisateurs de Linux ?</p>

<p>Pour ceux et celles qui se demande quelle est la solution, c'est la même que depuis
des années: <a href="https://github.com/xdissent/ievms">ievms</a> le script qui fonctionne.</p>

<p>À demain.</p>

<p><em>P.S. Ça fait des mois que je pense à écrire cet article. Ça fait du bien
quand ça sort.</em></p>

<p></p>
]]></content>
  </entry>
  
</feed>
